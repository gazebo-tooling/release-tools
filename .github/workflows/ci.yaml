name: CI

# base_ref / head_reaf are only available in PRs
on: [pull_request]

jobs:
  dsl_ci:
    runs-on: ubuntu-latest
    name: Diff for DSL code
    env:
      # Use enviroment vars to preserve multiline output not handled by outputs
      FILES_CHANGED: ""
      CONTENT_CHANGED: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Idenfify files changed in this PR
        id: files
        run: |
            git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }}
            echo "::set-output name=changed-files::$(git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }}| tr '\n' ' ')"
      - name: Run testing on changed config files
        id: dsl_check
        run: |
          for changed_file in ${{ steps.files.outputs.changed-files }}; do
            if [[ ${changed_file} != ${changed_file/dsl\/*} ]]; then
              echo "+ Detected at leat one config file: ${changed_file}."
              echo "::set-output name=run_job::true"
              break
            else
              echo "::set-output name=run_job::false"
            fi
          done
      - name: Checkout
        if: steps.dsl_check.outputs.run_job == 'true'
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: actions/setup-java@v3
        if: steps.dsl_check.outputs.run_job == 'true'
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Download job dsl jar
        if: steps.dsl_check.outputs.run_job == 'true'
        run: curl https://repo.jenkins-ci.org/public/org/jenkins-ci/plugins/job-dsl-core/1.77/job-dsl-core-1.77-standalone.jar -o jobdsl.jar
      - name: Generate all DSL files
        if: steps.dsl_check.outputs.run_job == 'true'
        run: |
          # simulate token for brew_release
          sudo mkdir -p /var/lib/jenkins/ && sudo touch /var/lib/jenkins/remote_token
          sudo chown -R ${USER} /var/lib/jenkins
          cd jenkins-scripts/dsl
          java -jar ../../jobdsl.jar *.dsl
          # export files for later diff
          mkdir /tmp/pr_xml_configuration
          mv *.xml /tmp/pr_xml_configuration/
      - name: Geneate master DSL files
        if: steps.dsl_check.outputs.run_job == 'true'
        run: |
          git clean -f -e jobdsl.jar
          git checkout master
          cd jenkins-scripts/dsl
          java -jar ../../jobdsl.jar *.dsl
          mkdir /tmp/current_xml_configuration
          mv *.xml /tmp/current_xml_configuration/
      - name: Generating diffs
        if: steps.dsl_check.outputs.run_job == 'true'
        run: |
          # somehow the Jenkins views changed the portlet_ id on every run.
          CONTENT_CHANGED=$(cat << EOF
          \`\`\`diff
          $(diff -ur -I '.*<id>dashboard_portlet_.*</id>.*' /tmp/current_xml_configuration /tmp/pr_xml_configuration || true)
          \`\`\`
          EOF
          )
          FILES_CHANGED=$(cat << EOF
          > $(diff -qr -I '.*<id>dashboard_portlet_.*</id>.*' /tmp/current_xml_configuration /tmp/pr_xml_configuration || true)
          EOF
          )
          echo "FILES_CHANGED<<EOF_F" >> $GITHUB_ENV
          echo "${FILES_CHANGED}" >> $GITHUB_ENV
          echo "EOF_F" >> $GITHUB_ENV
          echo "CONTENT_CHANGED<<EOF_C" >> $GITHUB_ENV
          echo "${CONTENT_CHANGED}" >> $GITHUB_ENV
          echo "EOF_C" >> $GITHUB_ENV
      - name: Publish diffs in a comment
        if: steps.dsl_check.outputs.run_job == 'true'
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.USER_TOKEN}}
          script: |
            const output = `### This is an automatic response from the CI system for Jenkins DSL generation.
              Below is the list of Jenkins XML configuration files changed by this PR (from changes to DSL) and the content changed in the configuration files:
              #### :open_file_folder: XML Jenkins configuration files changed in this PR
              <details>

              ${ process.env.FILES_CHANGED }
              </details>

              #### :bookmark_tabs: Content changed in the XML configuration files in this PR
              <details>

              ${ process.env.CONTENT_CHANGED }
              </details>
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
